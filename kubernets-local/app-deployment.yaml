apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-app
data:
  nginx.conf: |    
    server {
        listen 80;
        index index.php index.html;
        root /usr/share/nginx/html;
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass localhost:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
        location / {
            try_files $uri $uri/ /index.php?$query_string;
            gzip_static on;
        }
    }
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: app

#   template:
#     metadata:
#       labels:
#         app: app
#     spec:
#       containers:
#       - name: libraryapitest-app
#         image: brunocaramelo/libraryapitest-app:v1.0
#         imagePullPolicy: Always
#         command: ["/bin/sh", "-c", "mkdir /usr/share/nginx ; ln -s /var/www/html/public /usr/share/nginx/html;  php-fpm;"]
#         ports:
#         - containerPort: 80
#         envFrom:
#         - configMapRef:
#             name: app-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-web

  template:
    metadata:
      labels:
        app: app-web
    spec:
      containers:
      - name: libraryapitest-app
        image: brunocaramelo/libraryapitest-app:v1.0
        imagePullPolicy: Always
        command: ["/bin/sh", "-c", "mkdir /usr/share/nginx ; ln -s /var/www/html/public /usr/share/nginx/html;  php-fpm;"]
        ports:
        - containerPort: 9000
        envFrom:
        - configMapRef:
            name: app-conf
      - name: libraryapitest-webserver
        image: nginx
        command: ["/bin/sh", "-c", "touch /usr/share/nginx/html/index.php; nginx -g 'daemon off;'"]
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf-app # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-app-web
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
   app: app-web
