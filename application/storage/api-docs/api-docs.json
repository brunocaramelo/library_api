{
  "swagger": "2.0",
  "info": {
    "description": "Exemplar de teste de biblioteca",
    "version": "1.0.0",
    "title": "Teste de biblioteca",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "bruno.caramelo5@gmail.com"
    }
  },
  "host": "localhost:4001/api",
  "basePath": "/v1",
  "tags": [
    {
      "name": "livraria",
      "description": "Exemplo de livraria documentado por aqui",
      "externalDocs": {
        "description": "Verifique mais",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/authors": {
      "get": {
        "tags": [
          "author"
        ],
        "summary": "Listar Autores",
        "description": "",
        "operationId": "listAuthors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Lista de autores"
          }
        }
      }
    },
    "/author/{authorId}": {
      "get": {
        "tags": [
          "author"
        ],
        "summary": "Detalhar Autore",
        "description": "",
        "operationId": "detailAuthor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "Id do Autor a ser detalhado",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de autores"
          }
        }
      },
      "put": {
        "tags": [
          "author"
        ],
        "summary": "Atualizar um Autor",
        "description": "",
        "operationId": "updateAutjor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "Id do Autor a ser alterado",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Atualizacao de Autores",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Author"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Objeto não encontrado"
          },
          "422": {
            "description": "Erros de validação"
          }
        }
      }
    },
    "/author": {
      "post": {
        "tags": [
          "author"
        ],
        "summary": "Adicionar Autor",
        "description": "",
        "operationId": "addAuthor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Adicionar Autor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Author"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Objeto não encontrado"
          }
        }
      }
    },

    "/disciplines": {
      "get": {
        "tags": [
          "discipline"
        ],
        "summary": "Listar Disciplinas",
        "description": "",
        "operationId": "listDisciplines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Lista de disciplinas"
          }
        }
      }
    },
    "/discipline/{disciplineId}": {
      "get": {
        "tags": [
          "discipline"
        ],
        "summary": "Detalhar Disciplina",
        "description": "",
        "operationId": "detailDiscipline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "disciplineId",
            "in": "path",
            "description": "Id da Disciplina a ser detalhada",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de disciiplinas"
          }
        }
      },
      "put": {
        "tags": [
          "discipline"
        ],
        "summary": "Atualizar um Disciplina",
        "description": "",
        "operationId": "updateDiscipline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "disciplineId",
            "in": "path",
            "description": "Id da Disciplina a ser alterada",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Atualizacao de Autores",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Discipline"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Objeto não encontrado"
          },
          "422": {
            "description": "Erros de validação"
          }
        }
      }
    },
    "/discipline": {
      "post": {
        "tags": [
          "discipline"
        ],
        "summary": "Adicionar Disciplina",
        "description": "",
        "operationId": "addDiscipline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Adicionar Disciplinas",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Discipline"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Objeto não encontrado"
          }
        }
      }
    },



  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Author": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Discipline": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}